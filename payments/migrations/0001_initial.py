# Generated by Django 2.1.7 on 2019-03-23 00:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddressAccountMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deposit_address', models.CharField(max_length=100, verbose_name='Deposit Address / Account')),
                ('deposit_memo', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Deposit Memo (if required)')),
                ('destination_address', models.CharField(max_length=100, verbose_name='Destination Address / Account')),
                ('destination_memo', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Destination Memo (if required)')),
            ],
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('symbol', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Coin Symbol (e.g. BTC)')),
                ('display_name', models.CharField(max_length=100, verbose_name='Display Name (e.g. Bitcoin)')),
                ('coin_type', models.CharField(max_length=20)),
                ('enabled', models.BooleanField(default=True)),
                ('our_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='If required, our Account/Address to send/receive with')),
                ('can_issue', models.BooleanField(default=False, verbose_name='Can we issue (create) this coin/token?')),
                ('setting_host', models.CharField(blank=True, max_length=255, null=True, verbose_name='Handler Setting - Hostname')),
                ('setting_port', models.CharField(blank=True, max_length=255, null=True, verbose_name='Handler Setting - Port')),
                ('setting_user', models.CharField(blank=True, max_length=255, null=True, verbose_name='Handler Setting - Username')),
                ('setting_pass', models.CharField(blank=True, max_length=255, null=True, verbose_name='Handler Setting - Password')),
                ('setting_json', models.TextField(default='{}', max_length=1000, verbose_name='Handler Setting - Custom JSON')),
            ],
        ),
        migrations.CreateModel(
            name='CoinPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange_rate', models.DecimalField(decimal_places=20, default=1, max_digits=40, verbose_name='Exchange Rate (Amount of `to` per `from`)')),
                ('from_coin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairs_from', to='payments.Coin')),
                ('to_coin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairs_to', to='payments.Coin')),
            ],
        ),
        migrations.CreateModel(
            name='Conversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='From Address / Account (if known)')),
                ('to_address', models.CharField(max_length=255, verbose_name='Destination Address / Account')),
                ('to_memo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Destination Memo (if applicable)')),
                ('to_amount', models.DecimalField(decimal_places=20, max_digits=40, verbose_name='Amount Sent')),
                ('to_txid', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction ID (Destination coin)')),
                ('tx_fee', models.DecimalField(decimal_places=20, default=0, max_digits=40, verbose_name='Blockchain Fee')),
                ('ex_fee', models.DecimalField(decimal_places=20, default=0, max_digits=40, verbose_name='Exchange Fee')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Creation Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
            ],
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txid', models.CharField(db_index=True, max_length=100, verbose_name='Transaction ID')),
                ('vout', models.IntegerField(blank=True, default=0, verbose_name='Output Number (if multiple deposits in one tx)')),
                ('status', models.CharField(choices=[('err', 'Error Processing Transaction'), ('inv', 'Transaction is invalid'), ('refund', 'Coins were returned to user'), ('new', 'New (awaiting processing)'), ('conv', 'Successfully converted')], default='new', max_length=20)),
                ('error_reason', models.TextField(blank=True, max_length=255, null=True)),
                ('tx_timestamp', models.DateTimeField(blank=True, null=True, verbose_name='Transaction Date/Time')),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('from_account', models.CharField(blank=True, max_length=100, null=True)),
                ('to_account', models.CharField(blank=True, max_length=100, null=True)),
                ('memo', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=20, max_digits=40)),
                ('refund_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Refunded to this account/address')),
                ('refund_memo', models.CharField(blank=True, max_length=500, null=True)),
                ('refund_coin', models.CharField(blank=True, max_length=10, null=True, verbose_name='The coin (symbol) that was refunded to them')),
                ('refund_amount', models.DecimalField(decimal_places=20, default=0, max_digits=40)),
                ('refund_txid', models.CharField(blank=True, max_length=500, null=True)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Creation Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processed At')),
                ('coin', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='deposits', to='payments.Coin')),
                ('convert_to', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deposit_converts', to='payments.Coin')),
            ],
        ),
        migrations.AddField(
            model_name='conversion',
            name='deposit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='conversion', to='payments.Deposit'),
        ),
        migrations.AddField(
            model_name='conversion',
            name='from_coin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='conversions_from', to='payments.Coin', verbose_name='From Coin'),
        ),
        migrations.AddField(
            model_name='conversion',
            name='to_coin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='conversions_to', to='payments.Coin', verbose_name='Converted Into (Symbol)'),
        ),
        migrations.AddField(
            model_name='addressaccountmap',
            name='deposit_coin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='deposit_maps', to='payments.Coin'),
        ),
        migrations.AddField(
            model_name='addressaccountmap',
            name='destination_coin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dest_maps', to='payments.Coin'),
        ),
        migrations.AlterUniqueTogether(
            name='deposit',
            unique_together={('txid', 'coin', 'vout')},
        ),
        migrations.AlterUniqueTogether(
            name='coinpair',
            unique_together={('from_coin', 'to_coin')},
        ),
        migrations.AlterUniqueTogether(
            name='addressaccountmap',
            unique_together={('deposit_coin', 'deposit_address', 'deposit_memo')},
        ),
    ]
